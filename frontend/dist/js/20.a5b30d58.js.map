{"version":3,"file":"js/20.a5b30d58.js","mappings":"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","sources":["webpack://rolenpermissionf/./src/components/Input.tsx","webpack://rolenpermissionf/./node_modules/chart.js/dist/chunks/helpers.segment.mjs","webpack://rolenpermissionf/./node_modules/chart.js/dist/chart.mjs","webpack://rolenpermissionf/./src/components/user/Chart.tsx","webpack://rolenpermissionf/./src/pages/report/User.tsx","webpack://rolenpermissionf/./node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js"],"sourcesContent":["import { Component, Prop, Vue } from 'vue-property-decorator'\nimport { VNode } from 'vue'\n\n@Component\nexport default class Input extends Vue {\n    private isFocus = false\n    private hasText = false\n\n    @Prop({ default: '' }) title!: string\n    @Prop({ default: false }) disabled!: boolean\n\n    render(): VNode {\n        return <div class={{ \"form__group\": true, \"has--text\": this.isFocus || this.hasText }}>\n            {this.title\n                ? <label for=\"\">{this.title}</label>\n                : null\n            }\n            {this.$slots.default}\n        </div>\n    }\n\n    mounted() {\n        const input: HTMLInputElement | null = this.$el.querySelector('input')\n\n        if (input) {\n            this.$nextTick(() => {\n                this.hasText = input.value !== ''\n            })\n\n            input.addEventListener('focus', () => {\n                this.isFocus = true\n            })\n\n            input.addEventListener('blur', () => {\n                this.isFocus = false\n            })\n\n            input.addEventListener('input', () => {\n                this.hasText = input.value.length > 0\n            })\n\n            if (this.disabled)\n                input.setAttribute('disabled', '')\n        }\n    }\n}","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import { CategoryScale, Chart, ChartConfiguration, Legend, LinearScale, LineController, LineElement, PointElement, Tooltip } from \"chart.js\"\nimport { VNode } from \"vue\"\nimport { Component, Vue, Watch } from \"vue-property-decorator\"\nimport { mapActions } from \"vuex\"\n\nimport { Timely, ReportParam } from '@/store/modules/Report'\nimport Input from '@/components/Input'\n\nChart.register(LineElement, LineController, CategoryScale, LinearScale, PointElement, Legend, Tooltip)\nlet chart: Chart\nconst colors = ['rgb(128,128,0)', 'rgb(255,255,0)', 'rgb(154,205,50)', 'rgb(85,107,47)', 'rgb(107,142,35)', 'rgb(124,252,0)', 'rgb(127,255,0)', 'rgb(173,255,47)', 'rgb(0,100,0)', 'rgb(0,128,0)', 'rgb(34,139,34)', 'rgb(0,255,0)', 'rgb(50,205,50)', 'rgb(144,238,144)', 'rgb(152,251,152)', 'rgb(143,188,143)', 'rgb(0,250,154)', 'rgb(0,255,127)', 'rgb(46,139,87)', 'rgb(102,205,170)', 'rgb(60,179,113)']\nconst monthNameList = ['January', 'Feburary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nconst config: ChartConfiguration = {\n    type: 'line',\n    data: {\n        datasets: [{\n            data: [1, 2]\n        }]\n    },\n    options: {\n        responsive: true,\n        interaction: {\n            intersect: true\n        },\n        scales: {\n            x: {\n                display: true,\n                title: {\n                    display: true\n                }\n            },\n            y: {\n                display: true,\n                title: {\n                    display: true,\n                    text: 'Value'\n                },\n                // suggestedMin: 0,\n                // suggestedMax: 10\n            }\n        }\n    }\n}\n\ninterface Data {\n    [propname: string]: number | Data\n}\n\n@Component({\n    methods: {\n        ...mapActions({\n            report: 'report/userReport'\n        })\n    }\n})\nexport default class UserChart extends Vue {\n    private report!: (params: ReportParam) => Promise<Data | Array<Data>>\n    private filter: Timely = Timely.MONTHLY\n    private start_date = '2022-10-02'\n    private end_date = '2022-10-02'\n\n    private list: Data = {}\n\n    @Watch('filter')\n    @Watch('start_date')\n    @Watch('end_date')\n    async onFilterChanged() {\n        this.init()\n    }\n\n    mounted() {\n        const chartElement: HTMLCanvasElement | undefined = this.$refs.chart as HTMLCanvasElement\n        chart = new Chart(chartElement, config)\n\n        this.init()\n    }\n\n    render(): VNode {\n        return <section class=\"chart\">\n            <header class=\"chart__header\">\n                <a href=\"#\" onClick={(event: Event) => {\n                    event.preventDefault()\n\n                    this.init()\n                }}>refresh</a>\n            </header>\n            <div>\n                <form action=\"#\" class=\"form form__inline mb-4\">\n                    <Input>\n                        <select v-model={this.filter}>\n                            {Object.keys(Timely).map(key => <option value={Timely[key as keyof typeof Timely]}>{key}</option>)}\n                        </select>\n                    </Input>\n                    <Input title=\"Start Date\">\n                        <input type=\"date\" v-model={this.start_date} />\n                    </Input>\n                    <Input title=\"End Date\">\n                        <input type=\"date\" v-model={this.end_date} />\n                    </Input>\n                </form>\n                <canvas ref=\"chart\" />\n            </div>\n        </section>\n    }\n\n    async init() {\n        this.list = await this.report({\n            filter: this.filter,\n            start_date: this.start_date,\n            end_date: this.end_date\n        }) as Data\n\n        if (this.filter === Timely.YEARLY) {\n            chart.data.labels = Object.keys(this.list)\n            chart.data.datasets = [{\n                label: 'New Users On 2022',\n                data: Object.values(this.list) as Array<number>,\n                backgroundColor: 'rgb(255, 255, 255)',\n                borderColor: 'rgb(23 165 23)',\n                cubicInterpolationMode: 'monotone',\n                tension: 1\n            }]\n        } else {\n            chart.data.datasets = []\n\n            Object.keys(this.list).forEach((year: string, index: number) => {\n                const backgroundColor = colors[index]\n\n                chart.data.labels = monthNameList\n                chart.data.datasets.push({\n                    data: Object.values(this.list[year]) as Array<number>,\n                    backgroundColor,\n                    borderColor: backgroundColor,\n                    label: year,\n                    fill: backgroundColor,\n                    cubicInterpolationMode: 'monotone',\n                    tension: 1\n                })\n            })\n        }\n\n        chart.update()\n    }\n}","import { Component, Vue } from \"vue-property-decorator\"\nimport { VNode } from 'vue'\n\nimport UserChart from \"@/components/user/Chart\"\n\n@Component\nexport default class UserReportPage extends Vue {\n    render(): VNode {\n        return <section class=\"card\">\n            <header class=\"card__header\">\n                <h1 class=\"card__title\">Report page</h1>\n            </header>\n            <div class=\"card__body\">\n                <div class=\"card__detail\">\n                    <UserChart />\n                </div>\n            </div>\n        </section>\n    }\n}","\"use strict\";function _extends(){return _extends=Object.assign?Object.assign.bind():function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=[].concat(d,e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=[].concat(g,h)}else c[b][f]=a[b][f];}else if(\"hook\"===b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n"],"names":["Input","Vue","render","this","isFocus","hasText","title","$slots","default","mounted","input","$el","querySelector","$nextTick","value","addEventListener","length","disabled","setAttribute","__decorate","Prop","Component","noop","uid","id","isNullOrUndef","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","_getKeyResolver","_splitKey","parts","split","tmp","part","push","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","r","g","hexParse","ret","alpha","hexString","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","exec","p1","p2","rotate","deg","hslString","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","interpolate","rgb1","rgb2","modHSL","ratio","clone","proto","fromObject","functionParse","Color","constructor","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","bounds","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","ScatterController","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","_args","afterEvent","ci","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","monthNameList","UserChart","Timely","chartElement","$refs","preventDefault","start_date","end_date","list","report","Watch","methods","mapActions","UserReportPage","_extends","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","mergeFn","module","exports"],"sourceRoot":""}