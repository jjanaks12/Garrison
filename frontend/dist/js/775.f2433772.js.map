{"version":3,"file":"js/775.f2433772.js","mappings":"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","sources":["webpack://rolenpermissionf/./src/components/pagination.tsx","webpack://rolenpermissionf/./src/components/user/Loading.tsx","webpack://rolenpermissionf/./src/pages/report/UserCompliance.tsx"],"sourcesContent":["import { VNode } from 'vue'\nimport { Component, Prop, Vue } from 'vue-property-decorator'\n\n@Component\nexport default class Paginate extends Vue {\n    @Prop({ required: true }) current!: number\n    @Prop({ required: true }) total!: number\n    @Prop({ default: 3 }) max!: number\n\n    get pages(): Array<number> {\n        let length = this.max\n\n        if (length > this.total)\n            length = this.total;\n\n        let start = this.current - Math.floor(length / 2)\n        start = Math.max(start, 1)\n        start = Math.min(start, 1 + this.total - length)\n\n        return Array.from({ length: length }, (_, i) => start + i)\n    }\n\n    /** \n     * \n     * @returns VNode\n     */\n    render(): VNode {\n        return (<nav class=\"pagination\">\n            {this.total > 1\n                ? [\n                    <ul class=\"pagination__list\">\n                        {this.current > 1 ? <li><a href=\"#\" class=\"pagination--btn prev\" onClick={this.prev}>prev</a></li> : null}\n                        {this.pages.map((pageno: number) => <li>\n                            {pageno === this.current\n                                ? <strong>{pageno}</strong>\n                                : <a href=\"#\" onClick={(event: MouseEvent) => { event.preventDefault(); this.goto(pageno) }}>{pageno}</a>}\n                        </li>)}\n                        {this.current < this.total ? <li><a href=\"#\" class=\"pagination--btn next\" onClick={this.next}>next</a></li> : null}\n                    </ul>,\n                    // <span>{this.current}/{this.total}</span>\n                ]\n                : null}\n        </nav>)\n    }\n\n    next(event: MouseEvent): void {\n        event.preventDefault()\n        this.$emit('next')\n    }\n\n    prev(event: MouseEvent): void {\n        event.preventDefault()\n        this.$emit('prev')\n    }\n\n    goto(pageNo: number): void {\n        this.$emit('goto', pageNo)\n    }\n}","import { Component, Vue } from \"vue-property-decorator\"\nimport { VNode } from \"vue\"\n\n@Component\nexport default class UserLoading extends Vue {\n    render(): VNode {\n        return <div class=\"skeleton__loader skeleton__loader--inline\">\n            <div class=\"wrap\">\n                <span class=\"text\"></span>\n            </div>\n            <div class=\"action\">\n                <span class=\"link\"></span>\n                <span class=\"link\"></span>\n            </div>\n        </div>\n    }\n}","import { Component, Vue } from \"vue-property-decorator\"\nimport { VNode } from 'vue'\nimport { mapActions, mapGetters } from \"vuex\"\n\nimport { UserCompliance } from '@/store/modules/Report'\nimport { RequestQuery } from \"@/interfaces/app\"\nimport Paginate from \"@/components/pagination\"\nimport UserLoading from \"@/components/user/Loading\"\n\n@Component({\n    computed: {\n        ...mapGetters({\n            current: 'user/currentPage',\n            lastPage: 'user/lastPage',\n            isLoading: 'user/isLoading'\n        })\n    },\n    methods: {\n        ...mapActions({\n            fetch: 'user/fetch',\n            userCompliance: 'report/userCompliance',\n            nextPage: 'user/nextPage',\n            prevPage: 'user/prevPage',\n            goto: 'user/gotoPage',\n        })\n    }\n})\nexport default class UserComplianceReportPage extends Vue {\n    private userCompliance!: () => Promise<Array<UserCompliance>>\n\n    private isLoading!: boolean\n    private current!: number\n    private lastPage!: number\n    private fetch!: (query: RequestQuery) => Promise<boolean>\n    private prevPage!: () => Promise<boolean>\n    private nextPage!: () => Promise<boolean>\n    private goto!: (pageno: number) => Promise<boolean>\n\n    private complianceList: Array<UserCompliance> = []\n\n    async mounted() {\n        await this.fetch({ params: { per_page: 10 } })\n        this.complianceList = await this.userCompliance()\n    }\n\n    render(): VNode {\n        return <section class=\"card\">\n            <header class=\"card__header\">\n                <h1 class=\"card__title\">User Compliance</h1>\n            </header>\n            <div class=\"card__body\">\n                {this.isLoading\n                    ? <UserLoading />\n                    : <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Name Added?</th>\n                                <th>Email Verified?</th>\n                                <th>Phone Verified?</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.complianceList.map((user: UserCompliance) => <tr>\n                                <td>{user.name}</td>\n                                <td class={[user.name_added ? 'bg__success' : 'bg__danger', 'text-center']}>{user.name_added ? 'yes' : 'no'}</td>\n                                <td class={[user.email_verified ? 'bg__success' : 'bg__danger', 'text-center']}>{user.email_verified ? 'yes' : 'no'}</td>\n                                <td class={[user.phone_verified ? 'bg__success' : 'bg__danger', 'text-center']}>{user.phone_verified ? 'yes' : 'no'}</td>\n                            </tr>)}\n                        </tbody>\n                    </table>\n                }\n            </div>\n            <footer class=\"card__footer\">\n                <Paginate current={this.current} total={this.lastPage} onNext={() => this.nextPage()} onPrev={() => this.prevPage()} onGoto={(pageno: number) => this.goto(pageno)} />\n            </footer>\n        </section>\n    }\n}"],"names":["Paginate","Vue","pages","length","this","max","total","start","current","Math","floor","min","Array","from","_","i","render","prev","map","pageno","event","preventDefault","goto","next","$emit","pageNo","__decorate","Prop","required","default","Component","UserLoading","UserComplianceReportPage","fetch","params","per_page","complianceList","userCompliance","isLoading","user","name","name_added","email_verified","phone_verified","lastPage","nextPage","prevPage","computed","mapGetters","methods","mapActions"],"sourceRoot":""}